{"ast":null,"code":"var _jsxFileName = \"/Users/juan.marval/projects/nextjs/rick-and-morty/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { API } from '../commons';\nimport Characters from '../components/Characters';\nconst StyledCharactersContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fix, minmax(80px, 1fr));\n  gap: 16px;\n`;\n\nconst Home = props => {\n  const {\n    data: {\n      results\n    }\n  } = props;\n\n  const characters = () => {\n    return results.map(character => __jsx(Characters, {\n      character: character,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Rick and Morty characters\"), __jsx(StyledCharactersContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, characters()));\n};\n\nHome.getInitialProps = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(API.BASE.characters);\n    return {\n      data\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/juan.marval/projects/nextjs/rick-and-morty/pages/index.tsx"],"names":["axios","styled","API","Characters","StyledCharactersContainer","div","Home","props","data","results","characters","map","character","getInitialProps","get","BASE","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,MAAMC,yBAAyB,GAAGH,MAAM,CAACI,GAAI;;;;CAA7C;;AAUA,MAAMC,IAAI,GAAIC,KAAD,IAAsB;AACjC,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,MAAwBF,KAA9B;;AAEA,QAAMG,UAAU,GAAG,MAAM;AACvB,WAAOD,OAAO,CAACE,GAAR,CAAYC,SAAS,IAAK,MAAC,UAAD;AAAY,MAAA,SAAS,EAAEA,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,CAAP;AACD,GAFD;;AAIA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE,MAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UAAU,EADb,CAFF,CADF;AAQD,CAfD;;AAiBAJ,IAAI,CAACO,eAAL,GAAuB,YAAY;AACjC,MAAI;AACF,UAAO;AAAEL,MAAAA;AAAF,QAAY,MAAMR,KAAK,CAACc,GAAN,CAAUZ,GAAG,CAACa,IAAJ,CAASL,UAAnB,CAAzB;AACA,WAAO;AAAEF,MAAAA;AAAF,KAAP;AACD,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPD;;AASA,eAAeV,IAAf","sourcesContent":["import axios from 'axios'\nimport styled from 'styled-components'\n\nimport { API } from '../commons'\nimport character, { CharactersList } from './api/character'\nimport Characters from '../components/Characters'\n\nconst StyledCharactersContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fix, minmax(80px, 1fr));\n  gap: 16px;\n`\n\ninterface HomeProps {\n  data: CharactersList\n}\n\nconst Home = (props: HomeProps) => {\n  const { data: { results } } = props\n  \n  const characters = () => {\n    return results.map(character => (<Characters character={character} />)) \n  }\n\n  return (\n    <>\n      <h1>Rick and Morty characters</h1>\n      <StyledCharactersContainer>\n        {characters()}\n      </StyledCharactersContainer>\n    </>\n  )\n}\n\nHome.getInitialProps = async () => {\n  try {\n    const  { data } =  await axios.get(API.BASE.characters)\n    return { data }\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}